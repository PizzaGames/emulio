apply plugin: "kotlin"
apply plugin: "edu.sc.seis.launch4j"

sourceCompatibility = 1.8
sourceSets.main.java.srcDirs = [ "src/" ]

project.ext.mainClassName = "com.github.emulio.desktop.DesktopLauncher"
project.ext.assetsDir = new File("../core/assets")

task run(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir

    //args Eval.me(appArgsWhatEverIWant)
    args = ["-workdir", "../../temp", "--forceWorkdirCreation"]

    //ignoreExitValue = true
}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir = project.assetsDir
    //ignoreExitValue = true
    debug = true
}


task dist(type: Jar) {
    from files(sourceSets.main.output.classesDirs)
    from files(sourceSets.main.output.resourcesDir)
    from {configurations.compile.collect {zipTree(it)}}
    from files(project.assetsDir)

    manifest {
        attributes 'Main-Class': project.mainClassName
    }

    archiveName = "emulio.jar"

}

dist.dependsOn classes

task afterEclipseImport(description: "Post processing after project generation", group: "IDE") {
  doLast {
    def classpath = new XmlParser().parse(file(".classpath"))
    new Node(classpath, "classpathentry", [ kind: 'src', path: 'assets' ]);
    def writer = new FileWriter(file(".classpath"))
    def printer = new XmlNodePrinter(new PrintWriter(writer))
    printer.setPreserveWhitespace(true)
    printer.print(classpath)
  }
}

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'edu.sc.seis.gradle:launch4j:2.4.6'
    }
}
repositories {
    mavenCentral()
    jcenter()
}

launch4j {
    outfile = "emulio.exe"
    productName = "emulio"
    mainClassName = "com.github.emulio.desktop.DesktopLauncher"
    icon = "${projectDir}/../core/assets/images/emulio.ico"
    splashFileName = "${projectDir}/../core/assets/images/splash.bmp"
    dontWrapJar = false
    copyright = "GPL 3 License"
    jar = "${projectDir}/build/libs/emulio.jar"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.slf4j:jul-to-slf4j:1.7.7'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'commons-cli:commons-cli:1.4'

}




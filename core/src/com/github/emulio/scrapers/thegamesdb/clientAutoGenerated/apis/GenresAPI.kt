/**
* TheGamesDB API
* API Documentations
*
* The version of the OpenAPI document: 1.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.apis

import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.models.Genres

import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.ApiClient
import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.ClientException
import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.ClientError
import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.ServerException
import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.ServerError
import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.MultiValueMap
import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.RequestConfig
import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.RequestMethod
import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.ResponseType
import com.github.emulio.scrapers.thegamesdb.clientAutoGenerated.infrastructure.Success

class GenresAPI(basePath: kotlin.String = "https://api.thegamesdb.net") : ApiClient(basePath) {

    /**
    * Fetch Genres list
    * 
    * @param apikey (Required) 
    * @return kotlin.collections.List<Genres>
    */
    @Suppress("UNCHECKED_CAST")
    fun genres(apikey: kotlin.String) : kotlin.collections.List<Genres> {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: MultiValueMap = mapOf("apikey" to listOf("$apikey"))
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.GET,
            "/Genres",
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.collections.List<Genres>>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.collections.List<Genres>
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
        }
    }

}
